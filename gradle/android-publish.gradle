apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'


def siteUrl = 'https://github.com/Hazer/Morphine'
def gitUrl = 'https://github.com/Hazer/Morphine.git'

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {

                if (project.plugins.findPlugin("com.android.library")) {
                    from components.release
                } else {
                    from components.java
                }

                artifact androidSourcesJar

                pom {
                    artifactId = PUBLISH_ARTIFACT_ID
                    packaging = packagingMode
                    name = PUBLISH_ARTIFACT_ID
                    description = libsDesc
                    url = siteUrl

                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'hazer'
                            name = 'Vithorio Polten'
                        }
                    }
                    scm {
                        connection = "scm:git:git://github.com/Hazer/Morphine.git"
                        developerConnection = "scm:git:ssh://github.com:Hazer/Morphine.git"
                        url = "https://github.com/Hazer/Morphine"
                    }
                }
            }
        }
    }
}


task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    if (project.plugins.findPlugin("com.android.library")) {
        // For Android libraries
        from android.sourceSets.main.java.srcDirs
        from android.sourceSets.main.kotlin.srcDirs
    } else {
        // For pure Kotlin libraries, in case you have them
        from sourceSets.main.java.srcDirs
        from sourceSets.main.kotlin.srcDirs
    }
}

artifacts {
    archives androidSourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = PUBLISH_ARTIFACT_ID
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
    }
}